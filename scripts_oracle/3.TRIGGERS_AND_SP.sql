-------------------------- TRIGGERS PARA CAMPOS AUTOFIELD DJANGO --------------------------
-- NOTA CREDITO
CREATE OR REPLACE TRIGGER NC_TRIGGER
    BEFORE INSERT ON NOTA_CREDITO
    FOR EACH ROW
BEGIN
    SELECT DELIVERY_SEQ.NEXTVAL
        INTO :NEW.NRO_NOTA_CREDITO 
    FROM DUAL;
END;
/
-- NOTA CREDITO DETALLE
CREATE OR REPLACE TRIGGER NC_DETALLE_TRIGGER
    BEFORE INSERT ON NC_DETALLE
    FOR EACH ROW
BEGIN
    SELECT DELIVERY_SEQ.NEXTVAL
        INTO :NEW.ID_DETALLE 
    FROM DUAL;
END;
/
-- DELIVERY
CREATE OR REPLACE TRIGGER DELIVERY_TRIGGER
    BEFORE INSERT ON DELIVERY
    FOR EACH ROW
BEGIN
    SELECT DELIVERY_SEQ.NEXTVAL
        INTO :NEW.ID_DELIVERY 
    FROM DUAL;
END;
/
-- MOTIVOS
CREATE OR REPLACE TRIGGER MOTIVO_TRIGGER
    BEFORE INSERT ON MOTIVO
    FOR EACH ROW
BEGIN
    SELECT MOTIVO_SEQ.NEXTVAL
        INTO :NEW.ID_MOTIVO 
    FROM DUAL;
END;
/
-- ESTADOS
CREATE OR REPLACE TRIGGER ESTADO_TRIGGER
    BEFORE INSERT ON ESTADO
    FOR EACH ROW
BEGIN
    SELECT ESTADO_SEQ.NEXTVAL
        INTO :NEW.ID_ESTADO 
    FROM DUAL;
END;
/
--COMUNA
CREATE OR REPLACE TRIGGER COMUNA_TRIGGER
    BEFORE INSERT ON COMUNA
    FOR EACH ROW
BEGIN
    SELECT COMUNA_SEQ.NEXTVAL
        INTO :NEW.ID_COMUNA 
    FROM DUAL;
END COMUNA_TRIGGER;
/
--DOMICILIO
CREATE OR REPLACE TRIGGER DOMICILIO_TRIGGER
    BEFORE INSERT ON DOMICILIO
    FOR EACH ROW
BEGIN
    SELECT DOMICILIO_SEQ.NEXTVAL
        INTO :NEW.ID_DOMICILIO 
    FROM DUAL;
END;
/
--FAMILIA_PRODUCTO
CREATE OR REPLACE TRIGGER FAMILIA_PRODUCTO_TRIGGER
    BEFORE INSERT ON FAMILIA_PRODUCTO
    FOR EACH ROW
BEGIN
    SELECT FAMILIA_PRODUCTO_SEQ.NEXTVAL
        INTO :NEW.ID_FAMILIA_PRODUCTO 
    FROM DUAL;
END;
/
--MARCA
CREATE OR REPLACE TRIGGER MARCA_TRIGGER
    BEFORE INSERT ON MARCA
    FOR EACH ROW
BEGIN
    SELECT MARCA_SEQ.NEXTVAL
        INTO :NEW.ID_MARCA
    FROM DUAL;
END;
/
--ORDEN
CREATE OR REPLACE TRIGGER ORDEN_TRIGGER
    BEFORE INSERT ON ORDEN
    FOR EACH ROW
BEGIN
    SELECT ORDEN_SEQ.NEXTVAL
        INTO :NEW.NRO_ORDEN 
    FROM DUAL;
END;
/
--ORDEN DETALLE
CREATE OR REPLACE TRIGGER ORDEN_DETALLE_TRIGGER
    BEFORE INSERT ON ORDEN_DETALLE
    FOR EACH ROW
BEGIN
    SELECT ORDEN_DETALLE_SEQ.NEXTVAL
        INTO :NEW.ID_DETALLE
    FROM DUAL;
END;
/
--RECIBO
CREATE OR REPLACE TRIGGER RECIBO_TRIGGER
    BEFORE INSERT ON RECIBO
    FOR EACH ROW
BEGIN
    SELECT RECIBO_SEQ.NEXTVAL
        INTO :NEW.NRO_RECIBO
    FROM DUAL;
END;
/
--PROVEEDOR
CREATE OR REPLACE TRIGGER PROVEEDOR_TRIGGER
    BEFORE INSERT ON PROVEEDOR
    FOR EACH ROW
BEGIN
    SELECT PROVEEDOR_SEQ.NEXTVAL
        INTO :NEW.ID_PROVEEDOR 
    FROM DUAL;
END;
/
--PROVINCIA
CREATE OR REPLACE TRIGGER PROVINCIA_TRIGGER
    BEFORE INSERT ON PROVINCIA
    FOR EACH ROW
BEGIN
    SELECT PROVINCIA_SEQ.NEXTVAL
        INTO :NEW.ID_PROVINCIA 
    FROM DUAL;
END;
/
--REGION
CREATE OR REPLACE TRIGGER REGION_TRIGGER
    BEFORE INSERT ON REGION
    FOR EACH ROW
BEGIN
    SELECT REGION_SEQ.NEXTVAL
        INTO :NEW.ID_REGION
    FROM DUAL;
END;
/
--RUBRO
CREATE OR REPLACE TRIGGER RUBRO_TRIGGER
    BEFORE INSERT ON RUBRO
    FOR EACH ROW
BEGIN
    SELECT RUBRO_SEQ.NEXTVAL
        INTO :NEW.ID_RUBRO
    FROM DUAL;
END;
/
--TIPO_DOCUMENTO
CREATE OR REPLACE TRIGGER TIPO_DOCUMENTO_TRIGGER
    BEFORE INSERT ON TIPO_DOCUMENTO
    FOR EACH ROW
BEGIN
    SELECT TIPO_DOC_SEQ.NEXTVAL
        INTO :NEW.ID_TIPO
    FROM DUAL;
END;
/
--TIPO_PRODUCTO
CREATE OR REPLACE TRIGGER TIPO_PRODUCTO_TRIGGER
    BEFORE INSERT ON TIPO_PRODUCTO
    FOR EACH ROW
BEGIN
    SELECT TIPO_PRODUCTO_SEQ.NEXTVAL
        INTO :NEW.ID_TIPO_PRODUCTO
    FROM DUAL;
END;
/
--PRODUCTO
CREATE OR REPLACE TRIGGER PRODUCTO_TRIGGER
    BEFORE INSERT ON PRODUCTO
    FOR EACH ROW
BEGIN
    SELECT :NEW.ID_PROVEEDOR||LPAD((SELECT ID_FAMILIA_PRODUCTO FROM TIPO_PRODUCTO WHERE ID_TIPO_PRODUCTO = :NEW.ID_TIPO_PRODUCTO),3,'0')||
    NVL(TO_CHAR(:NEW.FECHA_VENCIMIENTO, 'DDMMYYYY'),'00000000')|| LPAD(:NEW.ID_TIPO_PRODUCTO,3,'0')|| LPAD(PRODUCTO_SEQ.NEXTVAL,3,'0')
        INTO :NEW.ID_PRODUCTO
    FROM DUAL;
END;
/
--STOCK
CREATE OR REPLACE TRIGGER TR_STOCK
    AFTER UPDATE ON ORDEN
    FOR EACH ROW
DECLARE
    CURSOR C IS
        SELECT OD.CANTIDAD, OD.ID_PRODUCTO, P.STOCK
        FROM ORDEN_DETALLE OD JOIN PRODUCTO P
        ON OD.ID_PRODUCTO=P.ID_PRODUCTO
        WHERE OD.NRO_ORDEN=:OLD.NRO_ORDEN;
    R C%ROWTYPE;
BEGIN
    OPEN C;
        LOOP
            FETCH C INTO R;
            EXIT WHEN C%notfound;
                --CLIENTE
                IF :OLD.ID_TIPO=1 AND :NEW.ID_ESTADO=2 THEN
                    UPDATE PRODUCTO SET STOCK = R.STOCK-R.CANTIDAD WHERE ID_PRODUCTO=R.ID_PRODUCTO;
                END IF;
                --PROVEEDOR
                IF :OLD.ID_TIPO=2 AND :NEW.ID_ESTADO=2 THEN
                    UPDATE PRODUCTO SET STOCK = R.STOCK+R.CANTIDAD WHERE ID_PRODUCTO=R.ID_PRODUCTO;
                END IF;
        END LOOP;
    CLOSE C;
END TR_STOCK;
/
--STOCK NOTA CREDITO
CREATE OR REPLACE TRIGGER TR_STOCK_NC
    AFTER UPDATE ON NOTA_CREDITO
    FOR EACH ROW
DECLARE
    CURSOR C IS
        SELECT NCD.CANTIDAD, NCD.ID_PRODUCTO, P.STOCK
        FROM NC_DETALLE NCD JOIN PRODUCTO P
        ON NCD.ID_PRODUCTO=P.ID_PRODUCTO
        WHERE NCD.NRO_NOTA_CREDITO=:OLD.NRO_NOTA_CREDITO;
    R C%ROWTYPE;
BEGIN
    OPEN C;
        LOOP
            FETCH C INTO R;
            EXIT WHEN C%notfound;
                IF :NEW.ID_ESTADO=2 THEN
                    UPDATE PRODUCTO SET STOCK = R.STOCK+R.CANTIDAD WHERE ID_PRODUCTO=R.ID_PRODUCTO;
                END IF;
        END LOOP;
    CLOSE C;
END TR_STOCK_NC;
/