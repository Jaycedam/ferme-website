-------------------------- TRIGGERS PARA CAMPOS AUTOFIELD DJANGO --------------------------
--COMUNA
CREATE OR REPLACE TRIGGER COMUNA_TRIGGER
    BEFORE INSERT ON COMUNA
    FOR EACH ROW
BEGIN
    SELECT COMUNA_SEQ.NEXTVAL
        INTO :NEW.ID_COMUNA 
    FROM DUAL;
END COMUNA_TRIGGER;
/
--DOMICILIO
CREATE OR REPLACE TRIGGER DOMICILIO_TRIGGER
    BEFORE INSERT ON DOMICILIO
    FOR EACH ROW
BEGIN
    SELECT DOMICILIO_SEQ.NEXTVAL
        INTO :NEW.ID_DOMICILIO 
    FROM DUAL;
END;
/
--FAMILIA_PRODUCTO
CREATE OR REPLACE TRIGGER FAMILIA_PRODUCTO_TRIGGER
    BEFORE INSERT ON FAMILIA_PRODUCTO
    FOR EACH ROW
BEGIN
    SELECT FAMILIA_PRODUCTO_SEQ.NEXTVAL
        INTO :NEW.ID_FAMILIA_PRODUCTO 
    FROM DUAL;
END;
/
--MARCA
CREATE OR REPLACE TRIGGER MARCA_TRIGGER
    BEFORE INSERT ON MARCA
    FOR EACH ROW
BEGIN
    SELECT MARCA_SEQ.NEXTVAL
        INTO :NEW.ID_MARCA
    FROM DUAL;
END;
/
--NOTA CREDITO
CREATE OR REPLACE TRIGGER NOTA_CREDITO_TRIGGER
    BEFORE INSERT ON NOTA_CREDITO
    FOR EACH ROW
BEGIN
    SELECT NOTA_CREDITO_SEQ.NEXTVAL
        INTO :NEW.NRO_NOTA_CREDITO
    FROM DUAL;
END;
/
--NOTA CREDITO DETALLE
CREATE OR REPLACE TRIGGER NOTA_CREDITO_DETALLE_TRIGGER
    BEFORE INSERT ON NOTA_CREDITO_DETALLE
    FOR EACH ROW
BEGIN
    SELECT NOTA_CREDITO_DETALLE_SEQ.NEXTVAL
        INTO :NEW.ID_DETALLE
    FROM DUAL;
END;
/
--OC_DETALLE
CREATE OR REPLACE TRIGGER OC_DETALLE_TRIGGER
    BEFORE INSERT ON OC_DETALLE
    FOR EACH ROW
BEGIN
    SELECT OC_DETALLE_SEQ.NEXTVAL
        INTO :NEW.ID_OC_DETALLE
    FROM DUAL;
END;
/
--ORDEN_COMPRA
CREATE OR REPLACE TRIGGER ORDEN_COMPRA_TRIGGER
    BEFORE INSERT ON ORDEN_COMPRA
    FOR EACH ROW
BEGIN
    SELECT ORDEN_COMPRA_SEQ.NEXTVAL
        INTO :NEW.ID_ORDEN_COMPRA 
    FROM DUAL;
END;
/
--PROVEEDOR
CREATE OR REPLACE TRIGGER PROVEEDOR_TRIGGER
    BEFORE INSERT ON PROVEEDOR
    FOR EACH ROW
BEGIN
    SELECT PROVEEDOR_SEQ.NEXTVAL
        INTO :NEW.ID_PROVEEDOR 
    FROM DUAL;
END;
/
--PROVINCIA
CREATE OR REPLACE TRIGGER PROVINCIA_TRIGGER
    BEFORE INSERT ON PROVINCIA
    FOR EACH ROW
BEGIN
    SELECT PROVINCIA_SEQ.NEXTVAL
        INTO :NEW.ID_PROVINCIA 
    FROM DUAL;
END;
/
--RECIBO
CREATE OR REPLACE TRIGGER RECIBO_TRIGGER
    BEFORE INSERT ON RECIBO
    FOR EACH ROW
BEGIN
    SELECT RECIBO_SEQ.NEXTVAL
        INTO :NEW.NRO_DOC
    FROM DUAL;
END;
/
--RECIBO_DETALLE
CREATE OR REPLACE TRIGGER RECIBO_DETALLE_TRIGGER
    BEFORE INSERT ON RECIBO_DETALLE
    FOR EACH ROW
BEGIN
    SELECT RECIBO_DETALLE_SEQ.NEXTVAL
        INTO :NEW.ID_DETALLE
    FROM DUAL;
END;
/
--REGION
CREATE OR REPLACE TRIGGER REGION_TRIGGER
    BEFORE INSERT ON REGION
    FOR EACH ROW
BEGIN
    SELECT REGION_SEQ.NEXTVAL
        INTO :NEW.ID_REGION
    FROM DUAL;
END;
/
--RUBRO
CREATE OR REPLACE TRIGGER RUBRO_TRIGGER
    BEFORE INSERT ON RUBRO
    FOR EACH ROW
BEGIN
    SELECT RUBRO_SEQ.NEXTVAL
        INTO :NEW.ID_RUBRO
    FROM DUAL;
END;
/
--TIPO_DOCUMENTO
CREATE OR REPLACE TRIGGER TIPO_DOCUMENTO_TRIGGER
    BEFORE INSERT ON TIPO_DOCUMENTO
    FOR EACH ROW
BEGIN
    SELECT TIPO_DOC_SEQ.NEXTVAL
        INTO :NEW.ID_TIPO_DOC
    FROM DUAL;
END;
/
--TIPO_DOMICILIO
CREATE OR REPLACE TRIGGER TIPO_DOMICILIO_TRIGGER
    BEFORE INSERT ON TIPO_DOMICILIO
    FOR EACH ROW
BEGIN
    SELECT TIPO_DOMICILIO_SEQ.NEXTVAL
        INTO :NEW.ID_TIPO_DOMICILIO
    FROM DUAL;
END;
/
--TIPO_PRODUCTO
CREATE OR REPLACE TRIGGER TIPO_PRODUCTO_TRIGGER
    BEFORE INSERT ON TIPO_PRODUCTO
    FOR EACH ROW
BEGIN
    SELECT TIPO_PRODUCTO_SEQ.NEXTVAL
        INTO :NEW.ID_TIPO_PRODUCTO
    FROM DUAL;
END;
/
--PRODUCTO
CREATE OR REPLACE TRIGGER PRODUCTO_TRIGGER
    BEFORE INSERT ON PRODUCTO
    FOR EACH ROW
BEGIN
    SELECT :NEW.ID_PROVEEDOR||LPAD((SELECT ID_FAMILIA_PRODUCTO FROM TIPO_PRODUCTO WHERE ID_TIPO_PRODUCTO = :NEW.ID_TIPO_PRODUCTO),3,'0')||
    NVL(TO_CHAR(:NEW.FECHA_VENCIMIENTO, 'DDMMYYYY'),'00000000')|| LPAD(:NEW.ID_TIPO_PRODUCTO,3,'0')
        INTO :NEW.ID_PRODUCTO
    FROM DUAL;
END;
/
--STOCK
CREATE OR REPLACE TRIGGER TR_STOCK
AFTER INSERT ON RECIBO_DETALLE
FOR EACH ROW
BEGIN
    UPDATE PRODUCTO SET STOCK = STOCK-:NEW.CANTIDAD WHERE ID_PRODUCTO=:NEW.ID_PRODUCTO;
END TR_STOCK;
/